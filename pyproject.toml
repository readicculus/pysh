[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# See https://setuptools.pypa.io/en/latest/userguide/quickstart.html for more project configuration options.
name = "pysh-client"
version = "0.1.1"
readme = "README.md"
description = "A phish.net API wrapper in Python."
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries"
]
authors = [
    {name = "Yuval Boss", email = "yuval@yuvalboss.com"}
]
maintainers = [
    {name = "Yuval Boss", email = "yuval@yuvalboss.com"}
]

requires-python = ">=3.8"
dependencies = [
  "requests >= 2.0.0"
]

license = {file = "LICENSE"}

[project.urls]
Homepage = "https://github.com/readicculus/pysh"
Repository = "https://github.com/readicculus/pysh"
Changelog = "https://github.com/readicculus/pysh/blob/main/CHANGELOG.md"


[project.optional-dependencies]
dev = [
    "ruff",
    "mypy>=1.0,<1.5",
    "black>=23.0,<24.0",
    "isort>=5.12,<5.13",
    "pytest",
    "pytest-sphinx",
    "pytest-cov",
    "twine>=1.11.0",
    "build",
    "setuptools",
    "wheel",
    "Sphinx>=4.3.0,<7.1.0",
    "furo==2023.7.26",
    "myst-parser>=1.0,<2.1",
    "sphinx-copybutton==0.5.2",
    "sphinx-autobuild==2021.3.14",
    "sphinx-autodoc-typehints==1.23.3",
    "packaging"
]

[tool.setuptools.packages.find]
exclude = [
    "*.tests",
    "*.tests.*",
    "tests.*",
    "tests",
    "docs*",
    "scripts*"
]
where = ["src/"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
my_package = ["py.typed"]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
(
      __pycache__
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vscode
    | \.venv
    | \bdist\b
    | \bdoc\b
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3

# You can override these pyright settings by adding a personal pyrightconfig.json file.
[tool.pyright]
reportPrivateImportUsage = false

[tool.ruff]
line-length = 115
target-version = "py39"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
ignore_missing_imports = true
no_site_packages = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
strict_optional = false

[tool.pytest.ini_options]
testpaths = "tests/"
python_classes = [
  "Test*",
  "*Test"
]
addopts = "--cov=src/ --cov-report term-missing"

pythonpath = [
  "src/"
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
#fail_under = 80
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

[tool.coverage.html]
directory = "build/coverage_html_report"